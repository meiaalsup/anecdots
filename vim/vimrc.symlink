" Much of this vim config was inspired by:
" 
" * //missing.csail.mit.edu/2020/editors/
" * //github.com/jerluc/polka-dots
" * //learnvimscriptthehardway.stevelosh.com/
" * //github.com/skwp/dotfiles/blob/master/vimrc


" `nocompatible` switches from the default Vi-compatibility mode and enables 
" more useful Vim functionality. Not strictly necessary for ~/.vimrc, but needed
" if config loaded in other way
set nocompatible

" share clipboard to make copy paste work
set clipboard=unnamed
 
" Turn on syntax highlighting.
syntax on

" Disable the default Vim startup message.
set shortmess+=I

" Show line numbers.
set number

" relative line numbering: enables jumping up or down to a particular line, by
" {count}k to go up or {count}j to go down
set relativenumber

" Always show the status line at the bottom, even if you only have one window open.
set laststatus=2

" store extra :cmdline history
set history=1000

" Override backspace default (default doesn't word beyond insertion point set
" with 'i') to backspace over anything
set backspace=indent,eol,start

" Enable hidden buffers (not shown in any window)
set hidden

" Enable mouse support
set mouse+=a

" This setting makes search case-insensitive when all characters in the string
" being searched are lowercase. However, the search becomes case-sensitive if
" it contains any capital letters. This makes searching more convenient.
set ignorecase
set smartcase

" Enable searching as you type, rather than waiting till you press enter.
set incsearch

" Automatically update a file if it is changed externally
set autoread

" show mode in bottom
set showmode

" turn off swap files
set noswapfile
set nobackup
set nowb

" Persistent Undo: Keep undo history across sessions, by storing in file
if has('persistent_undo') && isdirectory(expand('~').'/.vim/backups')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" use 4 spaces instead of tabs during formatting
set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab


" Display tabs and trailing spaces visually
" set list listchars=tab:\ \ ,trail:Â·

set nowrap       "Don't wrap lines

" Disable audible bell because it's annoying.
set noerrorbells visualbell t_vb=

" Unbind Q, in normal mode enters Ex mode.
nmap Q <Nop> "

" Try to prevent bad habits like using the arrow keys for movement. This is
" not the only possible bad habit. For example, holding down the h/j/k/l keys
" for movement, rather than using more efficient movement commands, is also a
" bad habit. The former is enforceable through a .vimrc, while we don't know
" how to prevent the latter.
" Do this in normal mode...
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" make '_' move the line upward 
map _ ddkP

" make '-' move the line downward
map - ddp

" make spacebar select word
map <space> viw

" allow line deletion in insert mode
imap <c-d> <esc>ddi

nnoremap <PageUp> <C-u>
nnoremap <PageDown> <C-d>

filetype plugin indent on " enable file type detection

""""""""""""""" Plugin Configuration """""""""""""""""
map <C-n> :NERDTreeToggle<CR>

" fuzzy find
call plug#begin('~/.vim/plugged')
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
call plug#end()

map <silent> <C-f> :BLines<CR>
map <silent> <C-n> :FZF!<CR>

" local customizations in ~/.vimrc_local
let $LOCALFILE=expand("~/.vimrc_local")
if filereadable($LOCALFILE)
    source $LOCALFILE
    endif
